for higher scores in the columns for Classification, Clustering, Summarization, etc. based on your needs. Local Embeddings Here's a minimal example using a local embedding model: ```python /// script requires-python = "==3.12" dependencies = [ "sentence-transformers", "httpx", "numpy", ] /// from sentence_transformers import SentenceTransformer
import numpy as np model = SentenceTransformer('BAAI/bge-base-en-v1.5') # A small, high quality model async def embed(text: str) -> list[float]:
 """Get embedding vector for text using local model."""
 return model.encode(text).tolist() async def get_similarity(text1: str, text2: str) -> float:
 """Calculate cosine similarity between two texts."""
 emb1 = np.array(await embed(text1))
 emb2 = np.array(await embed(text2))
 return float(np.dot(emb1, emb2) / (np.linalg.norm(emb1) * np.linalg.norm(emb2))) async def main():
 print(await get_similarity("Apple", "Orange"))
 print(await get_similarity("Apple", "Lightning")) if name == " main ":
 import a

---

