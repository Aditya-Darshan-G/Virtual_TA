h)
 if not path.startswith("/data/"):
 raise HTTPException(status_code=400, detail="Invalid path")
 if not os.path.exists(path):
 raise HTTPException(status_code=404, detail="File not found")
 return FileResponse(path)

@app.post("/execute/python")
async def execute_python(code: str):
 """Execute Python code directly."""
 proc = await asyncio.create_subprocess_exec(
 "python3",
 "-",
 stdin=asyncio.subprocess.PIPE,
 stdout=asyncio.subprocess.PIPE,
 stderr=asyncio.subprocess.PIPE,
 )
 stdout, stderr = await proc.communicate(code.encode())

 if proc.returncode != 0:
 print(f"\nðŸ”´ Python execution failed:\n{stderr.decode()}")
 raise HTTPException(status_code=500, detail=f"Execution failed: {stderr.decode()}")

 return {"stdout": stdout.decode(), "stderr": stderr.decode()}

@app.post("/execute/bash")
async def execute_bash(code: str):
 """Execute bash code directly."""
 proc = await asyncio.create_subprocess_exec(
 "bash",
 stdin=asyncio.subprocess.PIPE,
 stdout=asyncio.subprocess.PIPE,
 st

---

