INSERT INTO users (name, email) VALUES
 ('Alice', 'alice@example.com'),
 ('Bob', 'bob@example.com'); -- Query data
SELECT name, COUNT(*) as count
FROM users
GROUP BY name
HAVING count > 1; -- Join tables
SELECT u.name, o.product
FROM users u
LEFT JOIN orders o ON u.id = o.user_id
WHERE o.status = 'pending';
``` Python Integration: ```python
import sqlite3
from pathlib import Path
import pandas as pd async def query_database(db_path: Path, query: str) -> pd.DataFrame:
 """Execute SQL query and return results as DataFrame. Args:
 db_path: Path to SQLite database
 query: SQL query to execute

Returns:
 DataFrame with query results
"""
try:
 conn = sqlite3.connect(db_path)
 return pd.read_sql_query(query, conn)
finally:
 conn.close() Example usage db = Path('data.db')
df = await query_database(db, '''
 SELECT date, COUNT(*) as count
 FROM events
 GROUP BY date
''')
``` Common Operations: Database Management ```sql
 -- Backup database
 .backup 'backup.db' -- Import CSV
 .mode csv
 .import

---

